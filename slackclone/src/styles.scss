/* You can add global styles to this file, and also import other style files */
// :root {
//     --dark-color: #24252B;
//     --light-color: #FFDB58;
// }


@use './app/header/header-theme' as header;
@use './app/profile/profile-theme' as profile;
@use './app/sidebar/sidebar-theme' as sidebar;
@use './app/chat-main/chat-main-theme' as chatmain;
@use './app/chatarea/chatearea-theme' as chatarea;
@use './app/chat-thread/chat-thread' as thread;
@use '@angular/material' as mat;
@import '~@angular/material/theming';
@import '/src/custom.theme.scss';
@include mat-core();


$custom-theme-primary: mat.define-palette($custom-pink, 500);
$custom-theme-primar-light: mat.define-palette($custom-pink, 800);
$custom-theme-accent: mat.define-palette($custom-accent, 500);
$custom-theme-warn: mat.define-palette($mat-red);
$custom-theme-light: mat.define-light-theme($custom-theme-primar-light, $custom-theme-accent, $custom-theme-warn );
$custom-theme-dark: mat.define-dark-theme($custom-theme-primary, $custom-theme-accent, $custom-theme-warn );


$custom-theme-primary-green: mat.define-palette($custom-green, 500);
$custom-theme-accent-green: mat.define-palette($custom-green, 200);
$custom-theme-warn-green: mat.define-palette($custom-green, A700);
$custom-theme-light-green: mat.define-light-theme($custom-theme-primary-green, $custom-theme-accent-green, $custom-theme-warn-green);
$custom-theme-dark-green: mat.define-dark-theme($custom-theme-primary-green, $custom-theme-accent-green, $custom-theme-warn-green);


// @include mat.core-theme($custom-theme-dark);
// @include angular-material-theme($custom-theme-dark);
@include mat.all-component-themes($custom-theme-dark);
@include header.theme($custom-theme-dark);
@include profile.theme($custom-theme-dark);
@include sidebar.theme($custom-theme-dark);
@include chatarea.theme($custom-theme-dark);
@include thread.theme($custom-theme-dark);

// $my-dark-theme-background: (
//   status-bar: rgb(56, 161, 56),
//   app-bar:    map_get($mat-blue, 900),
//   background: rgb(195, 158, 94),
//   hover:      rgba(white, 0.04), 
//   card:       map_get($mat-red, 800),
//   dialog:     map_get($mat-grey, 800),
//   disabled-button: $white-12-opacity,
//   raised-button: map-get($mat-grey, 800),
//   focused-button: $white-6-opacity,
//   selected-button: map_get($mat-grey, 900),
//   selected-disabled-button: map_get($mat-grey, 800),
//   disabled-button-toggle: black,
//   unselected-chip: map_get($mat-grey, 700),
//   disabled-list-option: black,
// );

// $my-dark-theme-foreground: (
//   base:              yellow,
//   divider:           $white-12-opacity,
//   dividers:          $white-12-opacity,
//   disabled:          rgba(white, 0.3),
//   disabled-button:   rgba(white, 0.3),
//   disabled-text:     rgba(white, 0.3),
//   hint-text:         rgba(white, 0.3),
//   secondary-text:    rgba(white, 0.7),
//   icon:              white,
//   icons:             white,
//   text:              yellow,
//   slider-min:        white,
//   slider-off:        rgba(white, 0.3),
//   slider-off-active: rgba(white, 0.3),
// );

// // instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
// @function create-wonky-theme($primary, $accent, $warn: mat-palette($mat-red)) {
//   @return (
//     primary: $primary,
//     accent: $accent,
//     warn: $warn,
//     is-dark: true,
//     foreground: $my-dark-theme-foreground,
//     background: $my-dark-theme-background,
//   );
// }

// // The rest of this is like a normal theme.scss file. The only difference being that we use create-wonky-theme instead of mat-light-theme
// $custom-theme-primary: mat.define-palette($custom-pink, 500);
// $custom-theme-accent: mat.define-palette($custom-accent, 500);
// $custom-theme-warn: mat-palette($mat-red);

// $custom-theme: create-wonky-theme($custom-theme-primary, $custom-theme-accent, $custom-theme-warn);

// @include angular-material-theme($custom-theme-light-green);



html,
body {
    height: 100%;
    overflow-y: auto;
}



.dark-themepink {
    @include angular-material-theme($custom-theme-dark);
    @include header.theme($custom-theme-dark);
    @include profile.theme($custom-theme-dark);
    @include sidebar.theme($custom-theme-dark);
    @include chatarea.theme($custom-theme-dark);
    @include thread.theme($custom-theme-dark);
}

.light-themepink {
    @include angular-material-theme($custom-theme-light);
    @include header.theme($custom-theme-light);
    @include profile.theme($custom-theme-light);
    @include sidebar.theme($custom-theme-light);
    @include chatarea.theme($custom-theme-light);
    @include thread.theme($custom-theme-light);
}

.dark-themegreen {
    @include angular-material-theme($custom-theme-dark-green);
    @include header.theme($custom-theme-dark-green);
    @include profile.theme($custom-theme-dark-green);
    @include sidebar.theme($custom-theme-dark-green);
    @include chatarea.theme($custom-theme-dark-green);
    @include thread.theme($custom-theme-dark-green);
}

.light-themegreen {
    @include angular-material-theme($custom-theme-light-green);
    @include header.theme($custom-theme-light-green);
    @include profile.theme($custom-theme-light-green);
    @include sidebar.theme($custom-theme-light-green);
    @include chatarea.theme($custom-theme-light-green);
    @include thread.theme($custom-theme-light-green);
}


body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
    background: rgb(255, 253, 253);
    background: linear-gradient(360deg, rgba(255, 253, 253, 1) 0%, var(--dark-color) 100%);
}

.access-denied {
    background-color: red;
    color: white;
    white-space: pre-wrap;
}

.success {
    background-color: #007a5a;
    color: white;
    white-space: pre-wrap;
}

.span-blue {
    color: #1264a3;
    cursor: pointer;

    &:hover {
        text-decoration: underline;
    }
}

.mat-drawer-content {
    overflow: unset !important;
}

.flex_cc {
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex_channel {
    flex: 1;
}

.element_header {
    box-sizing: border-box;
    width: 100%;
    height: 50px;
    margin-bottom: 16px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding-left: 24px;
    padding-right: 24px;

    >p {
        margin: 0;
        font-weight: bold;
    }

    >span {
        cursor: pointer;
    }
}